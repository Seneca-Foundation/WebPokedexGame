# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven, Docker, and ECS
on:
  push:
    branches:
    - develop
    - main

jobs:
  build:
    name: Build jar with Maven using Docker profile
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "Setup Docker Buildx"
      uses: docker/setup-buildx-action@v1
    - name: "Login to DockerHub"
      uses: docker/login-action@v1
      with:
        username: wtvamp
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - uses: actions/setup-java@v2
      with:
        cache: maven
        distribution: temurin
        java-version: "11"
    - name: "Cache local Maven repository"
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-
    - id: java_build
      name: "Java Build"
      run: |-
        mvn -B clean package --file pom.xml -P docker
        cp target/*jar app.jar
    - id: docker_build
      name: "Docker Build and Push"
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: "wtvamp/pokemonwebgame:beta"
        file: build.Dockerfile
    - name: "Configure AWS credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: "Login to Amazon ECS"
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: "Download task definition"
      run: |
        aws ecs describe-task-definition --task-definition pokemongameweb --query taskDefinition > task-definition.json
    - name: "Fill in the new image ID in the Amazon ECS task definition"
      id: pokemongame-svc
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: pokemonwebgame
        image: wtvamp/pokemonwebgame:latest
    - name: "Deploy Amazon ECS task definition"
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json
        service: pokemongame-svc
        cluster: seneca
        wait-for-service-stability: true
